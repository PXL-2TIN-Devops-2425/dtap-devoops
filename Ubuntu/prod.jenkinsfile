pipeline {
    agent any
        tools {
        dockerTool "docker_tool"
        }
     stages {
        stage('connect to production') {
            steps {
                sshagent(['prodserverSSH']) {
                    sh 'ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=10 ubuntu@3.91.158.12 ls -alh'
                }
            }
        }
        stage ('cleanup'){
            steps{
                sshagent(['prodserverSSH']) {
                sh '''
                if [ $(docker images -q 11502188/devoops:testbuild) ]; then
                        docker rmi -f 11502188/devoops:testbuild
                fi
                if docker ps -a --filter "name=test_container" --format '{{.Names}}' | grep -q "^test_container$"; then
                        docker rm -f test_container
                fi
                '''
                deleteDir()
                }
            }

        }
        stage('deploy prod'){
            steps {
                sshagent(['prodserverSSH']) {
                sh 'docker pull 11502188/devoops:testbuild'
                sh 'docker run -d -p 80:3000 --name prod_env 11502188/devoops:testbuild'
                }
            }
        }
        stage('start prod') {
            steps {
                sshagent(['prodserverSSH']) {
                    sh '''
                    ssh -o StrictHostKeyChecking=no ubuntu@3.91.158.12 << EOF
                    # Start de container opnieuw met restart-policy
                    docker run -d -p 80:3000 --restart always --name prod_env 11502188/devoops:testbuild
                    EOF
                    '''
                }
            }
        }
        stage('test prod') {
            steps {
                sshagent(['prodserverSSH']) {
                    script {
                        // Controleer beschikbaarheid met curl
                        def response = sh(script: '''
                        ssh -o StrictHostKeyChecking=no ubuntu@3.91.158.12 "curl -o /dev/null -s -w '%{http_code}' http://localhost:80"
                        ''', returnStdout: true).trim()

                        if (response != '200') {
                            error("De applicatie is niet beschikbaar! Statuscode: ${response}")
                        } else {
                            echo "De applicatie is succesvol gedeployed en beschikbaar. Statuscode: ${response}"
                        }
                    }
                }
            }
        }
    }
}