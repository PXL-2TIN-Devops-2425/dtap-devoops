pipeline {
    agent any
    tools {
        nodejs "testenvnode"
        dockerTool "docker_test"
    }
    stages {
        stage ('cleanup'){
            steps{
                sh '''
                if [ $(docker images -q 11502188/calculator:latest) ]; then
                    docker rmi -f 11502188/calculator:latest
                fi
                if docker ps -a --filter "name=test_env" --format "{{.Names}}" | grep -q "^test_env$"; then
                    docker rm -f test_env
                fi
                '''
                deleteDir()
            }
        }
        
        stage('fetch app code') {
            steps {
                // Get some code from a GitHub repository
                git branch: 'main', url: 'https://github.com/PXL-2TIN-DevOps-Resources/calculator-app-finished.git'
            }
        }

        stage('Install dependencies'){
            steps{
                sh 'npm install'
            }
        }

        stage('Build artifact'){
            steps {
                script{

                    docker.build('11502188/calculator:latest')
                    //sh 'docker run -d -p 3000:3000 --name test_env 11502188/calculator'
                }
            }
        }

        stage('Push artifact'){
            steps {
                withCredentials(
                    [usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                            docker push 11502188/calculator:latest
                        '''
                    }

            }
        }

        stage('Deployment'){
            steps {
                sh 'docker pull 11502188/calculator:latest'
                sh 'docker run -d -p 3000:3000 --name test_env 11502188/calculator'
            }
        }
    }
}
